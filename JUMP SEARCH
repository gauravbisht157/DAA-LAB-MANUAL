#include <iostream>
#include <cmath>
using namespace std;

void jumpSearch(int arr[], int n, int key) {
    int step = sqrt(n);
    int prev = 0, comp = 0;
    while (arr[min(step, n)-1] < key) {
        prev = step;
        step += sqrt(n);
        if (prev >= n) {
            cout << "Not Present " << comp << endl;
            return;
        }
        comp++;
    }
    while (arr[prev] < key) {
        prev++;
        if (prev == min(step, n)) {
            cout << "Not Present " << comp << endl;
            return;
        }
        comp++;
    }
    if (arr[prev] == key) {
        cout << "Present " << comp << endl;
        return;
    }
    cout << "Not Present " << comp << endl;
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, key;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++)
            cin >> arr[i];
        cin >> key;
        jumpSearch(arr, n, key);
    }
    return 0;
}



INPUT:-
3
5
12 23 36 39 41
41
8
21 39 40 45 51 54 68 72
69
10
101 246 438 561 796 896 899 4644 7999 8545 
7999


OUTPUT:-
Present 3
Not Present 4
Present 3
