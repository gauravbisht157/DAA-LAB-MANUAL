#include <iostream>
using namespace std;

int binarySearchFirst(int arr[], int n, int key) {
    int low = 0;
    int high = n - 1;
    int first = -1;
    
    while (low <= high) {
        int mid = (low + high) / 2;
        
        if (arr[mid] == key) {
            first = mid;
            high = mid - 1;
        }
        else if (arr[mid] > key) {
            high = mid - 1;
        }
        else {
            low = mid + 1;
        }
    }
    return first;
}

int binarySearchLast(int arr[], int n, int key) {
    int low = 0;
    int high = n - 1;
    int last = -1;
    
    while (low <= high) {
        int mid = (low + high) / 2;
        
        if (arr[mid] == key) {
            last = mid;
            low = mid + 1;
        }
        else if (arr[mid] > key) {
            high = mid - 1;
        }
        else {
            low = mid + 1;
        }
    }
    return last;
}

int main() {
    int t;
    cin >> t;
    
    while (t--) {
        int n, key;
        cin >> n;
        int arr[n];
        
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        
        cin >> key;
        int first = binarySearchFirst(arr, n, key);
        int last = binarySearchLast(arr, n, key);
        
        if (first != -1) {
            int count = last - first + 1;
            cout << key << " - " << count << endl;
        }
        else {
            cout << key << " - " << "Not Present" << endl;
        }
    }
    
    return 0;
}


INPUT:-
2
10 
235 235 278 278 763 764 790 853 981 981 
981
15 
1 2 2 3 3 5 5 5 25 75 75 75 97 97 97
75


OUTPUT:-
981 - 2
75 - 3
